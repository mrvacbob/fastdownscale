The initial work for an efficient thumbnailing library.

=======================================
Distribution
=======================================
Includes source for:
- libjpeg-8c

I may patch the bundled libraries to fix
security/performance problems. I haven't
made any effort to keep these compatible.

=======================================
Theory
=======================================

* JPEGs can be decoded 8 pixel rows at a time.
  PNG can be decoded 1 row at a time.
  So you don't need to allocate the other rows.
* JPEG->JPEG thumbnailing should be done in planar YUV
  space, not RGB space.
* When resizing JPEGs 1/8 the size, we can skip the IDCT
  entirely. For progressize JPEG, we can skip reading past
  the first scan.
* When resizing 1/2 to 1/4 the size, we can use lowres IDCT.
* Resampling kernels are separable, so the horizontal and vertical
  scaling can be done in separate passes.
* Resampling images should be done with fixed-point math.
* Using a softer filter for resizing will avoid ringing in the output
  image.

=======================================
Problems
=======================================

* It's buggy.
* Needs PNG/GIF support at least.
* Written in C++
* libjpeg is extremely inefficient; opening any file involves malloc()+bzero()
  of very large arrays. I wrote a patch to use calloc() and then lost it.
  Even with calloc() the thumbnailer died in my Linux VM on some large images.
  Can't remember if it was virtual or physical memory exhaustion, which would be
  important to know.
* resample.cpp needs cleaning, although I still think it's better than everyone
  else's code.

=======================================
Need to benchmark
=======================================

* libavcodec for decoding
* libavcodec for thumbnailing
* libjpeg-turbo for thumbnailing
* libswscale for resizing